/* Auto generated by IronLox.SourceGeneration */

//using IronLox.Scanning;

//namespace IronLox.SyntaxTree.Expressions;

//public class BinaryExpression(IExpression left, Token @operator, IExpression right) : IExpression
//{
//    public IExpression Left { get; } = left;
//    public Token Operator { get; } = @operator;
//    public IExpression Right { get; } = right;

//    public T Accept<T>(IExpressionVisitor<T> visitor) => visitor.Visit(this);
//}

namespace IronLox.SyntaxTree.Expressions;

[Syntax(
    Interface = "IExpression",
    VisitorInterface = "IExpressionVisitor",
    Pattern = "IExpression left, Token @operator, IExpression right",
    Usings = ["IronLox.Scanning"]
)]
public partial class BinaryExpression;